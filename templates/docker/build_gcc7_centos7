# NOTE: Copying a pre-built gcc7 could be an option to avoid the
# expensive build step.
### COPY gcc7 ${GCC7_DIR}

# Build gcc 7 and set the environment to use it
# NOTE: this step requires packages gmp-devel, mpfr-devel,
# libmpc-devel, and file (see above)

# NOTE: Q: What about devtoolset-7? Will that work instead?
#       A: Not quite:
#          https://stackoverflow.com/questions/49393888/how-can-i-use-the-new-c-11-abi-with-devtoolset-7-on-centos-rhel
#          (tl;dr: devtoolset-7 does not support the new cxx11 ABI since it
#          conflicts with CentOS sys libs.)
#          Rapids will use new new ABI for its binaries, including its own
#          libstdc++, and the rest of CentOS will continue to use the
#          system default libs.

ARG GCC7_DIR=${RAPIDS_SRC_DIR}/gcc7

RUN mkdir -p ${GCC7_DIR}
RUN cd ${GCC7_DIR} && wget -q http://ftp.gnu.org/gnu/gcc/gcc-7.2.0/gcc-7.2.0.tar.gz 
RUN cd ${GCC7_DIR} && tar zxf gcc-7.2.0.tar.gz
RUN cd ${GCC7_DIR}/gcc-7.2.0 && \
    ./configure --prefix=${GCC7_DIR} --disable-multilib && \
    make -j && make install

# Remove gcc source dir and tarfile
RUN rm -r ${GCC7_DIR}/gcc-7.2.0 ${GCC7_DIR}/gcc-7.2.0.tar.gz

# Update environment to use new gcc7
ENV CC=${GCC7_DIR}/bin/gcc
ENV CXX=${GCC7_DIR}/bin/g++
ENV PATH=${GCC7_DIR}/bin:$PATH
ENV LD_LIBRARY_PATH=${GCC7_DIR}/lib64:$LD_LIBRARY_PATH
ENV CUDAHOSTCXX=${GCC7_DIR}/bin/g++
